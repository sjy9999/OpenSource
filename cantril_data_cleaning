#!/usr/bin/env bash

# life_expectancy    2 3 4       Code	Year	Life expectancy
# homicide_rate     2 3 4      Code	Year	Homicide rate
# <Entity> <Code> <Year> <GDP per capita> <Population> <Homicide Rate> <Life Expectancy> <Cantril Ladder score>
if [ $# -ne 3 ]; then
    echo "Usage: $0 gdp-vs-happiness.tsv life_expectancy.tsv homicide-rate-unodc.tsv"
    exit 1
fi

output_file="enhanced_gdp_vs_happiness.tsv"
temp_file="temp_$output_file"

# 鉴别输入文件
for arg in "$@"
do
    if [[ "$arg" == *"homicide"* ]]; then
        homicide_file="$arg"
    elif [[ "$arg" == *"life-satisfaction-vs-life-expectancy"* ]]; then
        life_expectancy_file="$arg"
    elif [[ "$arg" == *"gdp-vs-happiness"* ]]; then
        happiness_file="$arg"
    fi
done

# 清理输入文件中的潜在格式问题
awk -F'\t' -v OFS='\t' '{
    print;
}' "$happiness_file" > cleaned_gdp_vs_happiness.tsv

# 处理life_expectancy.tsv和homicide-rate-unodc.tsv文件
awk -F'\t' -v OFS='\t' 'NR > 1 && $3 >= 2011 && $3 <= 2021 {
    gsub(/\r/, ""); gsub(/\t+/, "\t");
    if ($4 !~ /^[0-9]+(\.[0-9]+)?$/) $4 = "";   # 如果不是整数或者小数，则设置为空
    print $2, $3, $4;
}' "$life_expectancy_file" > life_expectancy.map
awk -F'\t' -v OFS='\t' 'NR > 1 && $3 >= 2011 && $3 <= 2021 {
    gsub(/\r/, ""); gsub(/\t+/, "\t");
    if ($4 !~ /^[0-9]+\.?[0-9]*$/) $4 = "";  # 如果不是小数，则设置为空
    print $2, $3, $4;
}' "$homicide_file" > homicide_rate.map

# 输出表头到输出文件
echo -e "Entity\tCode\tYear\tGDP per capita\tPopulation\tHomicide Rate\tLife Expectancy\tCantril Ladder score" > "$output_file"

# 重新合并数据，并将数据写入临时文件
awk -F'\t' -v OFS='\t' '
    BEGIN {
        while ((getline < "life_expectancy.map") > 0) {
            life_exp[$1 FS $2] = $3;  # Life expectancy数据
        }
        while ((getline < "homicide_rate.map") > 0) {
            homicide[$1 FS $2] = $3;  # Homicide rate数据
        }
    }
    FNR > 1 && $2 != "" && $3 >= 2011 && $3 <= 2021 {
        key = $2 FS $3;
        # 输出数据，根据新的列顺序
        print $1, $2, $3, $5, $6, (key in homicide ? homicide[key] : ""), (key in life_exp ? life_exp[key] : ""), $4;
    }
' cleaned_gdp_vs_happiness.tsv > "$temp_file"

# 排序数据并追加到输出文件
sort -k1,1 -k3,3n "$temp_file" >> "$output_file"

# 清理临时文件
rm life_expectancy.map homicide_rate.map cleaned_gdp_vs_happiness.tsv "$temp_file"


# <Entity> <Code> <Year> <GDP per capita> <Population> <Homicide Rate> <Life Expectancy> <Cantril Ladder score>
# Entity	Code	Year	Cantril ladder score	GDP per capita, PPP (constant 2017 international $)	Population (historical estimates)	Life Expectancy	Homicide Rate
